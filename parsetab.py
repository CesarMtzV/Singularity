
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BOOL CIN CLASS COLON COMMA COUT DIVIDE ELSE EQUAL FALSE FLOAT FOR FUNCTION GREATER_THAN GREATER_THAN_OR_EQUAL ID IF INPUT INT LBRACKET LCURLY LESS_THAN LESS_THAN_OR_EQUAL LPAREN MAIN MINUS MOD MULTIPLY NOT_EQUAL OR OUTPUT PI PLUS POW POWER RBRACKET RCURLY RETURN RPAREN SEMICOLON STRING TRUE VAR_CONST_FLOAT VAR_CONST_INT VAR_CONST_STRING VOID WHILE\n    programa    : programa_1 cuerpo\n    \n    programa_1  : vars \n                | epsilon\n    \n    vars        : tipo_simple ID np_add_variable vars_1\n                | tipo_compuesto ID np_add_variable SEMICOLON vars_4\n    \n    vars_1      : SEMICOLON vars_4\n                | vars_2\n    \n    vars_2      : LBRACKET VAR_CONST_INT RBRACKET vars_3\n    \n    vars_3      : LBRACKET VAR_CONST_INT RBRACKET SEMICOLON vars_4 \n                | SEMICOLON vars_4\n    \n    vars_4      : vars \n                | epsilon\n    \n    tipo_simple : INT \n                | FLOAT \n                | BOOL \n                | STRING\n    \n    tipo_compuesto : ID\n    \n    cuerpo      :  cuerpo_1 funcion_main\n    \n    cuerpo_1    : funciones \n                | epsilon\n    \n    funcion_main : MAIN LPAREN RPAREN LCURLY RCURLY\n    \n    funciones   : funcion_tipo funciones_1\n                | funcion_void funciones_1\n    \n    funciones_1 : funciones\n                | epsilon\n    \n    funcion_tipo : FUNCTION tipo_simple ID np_add_function LPAREN params RPAREN LCURLY RETURN RCURLY\n    \n    funcion_void : FUNCTION VOID ID np_add_function LPAREN params RPAREN LCURLY RCURLY\n    \n    params      : tipo_simple ID np_function_parameters params_1 \n                | epsilon\n    \n    params_1    : COMMA params\n                | epsilon\n    epsilon : np_add_function :np_function_parameters :np_add_variable :'
    
_lr_action_items = {'FUNCTION':([0,2,3,4,16,17,34,35,36,38,42,43,44,46,57,58,63,72,73,75,76,],[-32,18,-2,-3,18,18,-4,-32,-7,-32,-6,-11,-12,-5,-8,-32,-10,-27,-32,-26,-9,]),'MAIN':([0,2,3,4,13,14,15,16,17,23,24,25,26,34,35,36,38,42,43,44,46,57,58,63,72,73,75,76,],[-32,-32,-2,-3,22,-19,-20,-32,-32,-22,-24,-25,-23,-4,-32,-7,-32,-6,-11,-12,-5,-8,-32,-10,-27,-32,-26,-9,]),'INT':([0,18,35,38,48,49,58,69,73,],[8,8,8,8,8,8,8,8,8,]),'FLOAT':([0,18,35,38,48,49,58,69,73,],[9,9,9,9,9,9,9,9,9,]),'BOOL':([0,18,35,38,48,49,58,69,73,],[10,10,10,10,10,10,10,10,10,]),'STRING':([0,18,35,38,48,49,58,69,73,],[11,11,11,11,11,11,11,11,11,]),'ID':([0,5,6,7,8,9,10,11,27,28,35,38,52,58,73,],[6,19,-17,20,-13,-14,-15,-16,32,33,6,6,59,6,6,]),'$end':([1,12,21,51,],[0,-1,-18,-21,]),'VOID':([18,],[28,]),'SEMICOLON':([19,20,29,30,50,67,],[-35,-35,35,38,58,73,]),'LBRACKET':([19,29,50,],[-35,37,56,]),'LPAREN':([22,32,33,40,41,],[31,-33,-33,48,49,]),'RPAREN':([31,48,49,53,54,55,59,64,68,69,70,74,],[39,-32,-32,60,-29,61,-34,-32,-28,-32,-31,-30,]),'VAR_CONST_INT':([37,56,],[45,62,]),'LCURLY':([39,60,61,],[47,65,66,]),'RBRACKET':([45,62,],[50,67,]),'RCURLY':([47,66,71,],[51,72,75,]),'COMMA':([59,64,],[-34,69,]),'RETURN':([65,],[71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'programa_1':([0,],[2,]),'vars':([0,35,38,58,73,],[3,43,43,43,43,]),'epsilon':([0,2,16,17,35,38,48,49,58,64,69,73,],[4,15,25,25,44,44,54,54,44,70,54,44,]),'tipo_simple':([0,18,35,38,48,49,58,69,73,],[5,27,5,5,52,52,5,52,5,]),'tipo_compuesto':([0,35,38,58,73,],[7,7,7,7,7,]),'cuerpo':([2,],[12,]),'cuerpo_1':([2,],[13,]),'funciones':([2,16,17,],[14,24,24,]),'funcion_tipo':([2,16,17,],[16,16,16,]),'funcion_void':([2,16,17,],[17,17,17,]),'funcion_main':([13,],[21,]),'funciones_1':([16,17,],[23,26,]),'np_add_variable':([19,20,],[29,30,]),'vars_1':([29,],[34,]),'vars_2':([29,],[36,]),'np_add_function':([32,33,],[40,41,]),'vars_4':([35,38,58,73,],[42,46,63,76,]),'params':([48,49,69,],[53,55,74,]),'vars_3':([50,],[57,]),'np_function_parameters':([59,],[64,]),'params_1':([64,],[68,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> programa_1 cuerpo','programa',2,'p_programa','parserv2.py',20),
  ('programa_1 -> vars','programa_1',1,'p_programa_1','parserv2.py',25),
  ('programa_1 -> epsilon','programa_1',1,'p_programa_1','parserv2.py',26),
  ('vars -> tipo_simple ID np_add_variable vars_1','vars',4,'p_vars','parserv2.py',33),
  ('vars -> tipo_compuesto ID np_add_variable SEMICOLON vars_4','vars',5,'p_vars','parserv2.py',34),
  ('vars_1 -> SEMICOLON vars_4','vars_1',2,'p_vars_1','parserv2.py',39),
  ('vars_1 -> vars_2','vars_1',1,'p_vars_1','parserv2.py',40),
  ('vars_2 -> LBRACKET VAR_CONST_INT RBRACKET vars_3','vars_2',4,'p_vars_2','parserv2.py',45),
  ('vars_3 -> LBRACKET VAR_CONST_INT RBRACKET SEMICOLON vars_4','vars_3',5,'p_vars_3','parserv2.py',50),
  ('vars_3 -> SEMICOLON vars_4','vars_3',2,'p_vars_3','parserv2.py',51),
  ('vars_4 -> vars','vars_4',1,'p_vars_4','parserv2.py',56),
  ('vars_4 -> epsilon','vars_4',1,'p_vars_4','parserv2.py',57),
  ('tipo_simple -> INT','tipo_simple',1,'p_tipo_simple','parserv2.py',64),
  ('tipo_simple -> FLOAT','tipo_simple',1,'p_tipo_simple','parserv2.py',65),
  ('tipo_simple -> BOOL','tipo_simple',1,'p_tipo_simple','parserv2.py',66),
  ('tipo_simple -> STRING','tipo_simple',1,'p_tipo_simple','parserv2.py',67),
  ('tipo_compuesto -> ID','tipo_compuesto',1,'p_tipo_compuesto','parserv2.py',72),
  ('cuerpo -> cuerpo_1 funcion_main','cuerpo',2,'p_cuerpo','parserv2.py',79),
  ('cuerpo_1 -> funciones','cuerpo_1',1,'p_cuerpo_1','parserv2.py',84),
  ('cuerpo_1 -> epsilon','cuerpo_1',1,'p_cuerpo_1','parserv2.py',85),
  ('funcion_main -> MAIN LPAREN RPAREN LCURLY RCURLY','funcion_main',5,'p_funcion_main','parserv2.py',91),
  ('funciones -> funcion_tipo funciones_1','funciones',2,'p_funciones','parserv2.py',96),
  ('funciones -> funcion_void funciones_1','funciones',2,'p_funciones','parserv2.py',97),
  ('funciones_1 -> funciones','funciones_1',1,'p_funciones_1','parserv2.py',102),
  ('funciones_1 -> epsilon','funciones_1',1,'p_funciones_1','parserv2.py',103),
  ('funcion_tipo -> FUNCTION tipo_simple ID np_add_function LPAREN params RPAREN LCURLY RETURN RCURLY','funcion_tipo',10,'p_funcion_tipo','parserv2.py',109),
  ('funcion_void -> FUNCTION VOID ID np_add_function LPAREN params RPAREN LCURLY RCURLY','funcion_void',9,'p_funcion_void','parserv2.py',114),
  ('params -> tipo_simple ID np_function_parameters params_1','params',4,'p_params','parserv2.py',120),
  ('params -> epsilon','params',1,'p_params','parserv2.py',121),
  ('params_1 -> COMMA params','params_1',2,'p_params_1','parserv2.py',126),
  ('params_1 -> epsilon','params_1',1,'p_params_1','parserv2.py',127),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','parserv2.py',131),
  ('np_add_function -> <empty>','np_add_function',0,'p_np_add_function','parserv2.py',142),
  ('np_function_parameters -> <empty>','np_function_parameters',0,'p_np_function_parameters','parserv2.py',153),
  ('np_add_variable -> <empty>','np_add_variable',0,'p_np_add_variable','parserv2.py',165),
]
